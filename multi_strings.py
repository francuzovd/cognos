#!/usr/bin/env python3

"""

Скритп создан для консультантов IBM Cognos, которым необходимо писать аналогичный код правил в кубах, за исключением
выбранных элементов.
В качестве парметров Вы можете указать искомый шаблон и перечислить все элементы, на которые надо заменить шаблон.

После вызова скрипта Вам будет предложено ввести строку кода.
Нет необходимости заключать строку в кавычки или другие символы.

Используемые парметры:
-h вызов инструкции по работе со скриптом
-f шаблон или часть строки, которую необходимо заменить. Рекомендую использовать в качестве шаблона специальные символы.
   По умолчанию шаблоном является ###
-r элементы, перечислянные через пробел. Все элементы необходимо заключить в одинарные кавычки.
   По умолчанию элементами являются названия месяцев
   'янв фев мар апр май июн июл авг сен окт ноя дек'

Примеры работы с параметрами
"['###'] = DB('Расходны на персонал', !Тип данных, !Год, !Версия, !Подразделение, '###')"



"""
import sys


def dub_months(find_value, replace_value):
    """
    Функция берет на вход шаблон и список значений, на которые заменяется шаблон.
    Пользователь вводить строку и далее в цикле происходит замена шаблона на значения из списка.
    Все новые строки выводятся на экран.

    :param find_value: шаблон, string
    :param replace_value: список строковых значений, array
    """
    base_string = input('Введите строку:\n')
    if base_string == '':
        base_string = f"['{find_str}'] = DB('Расходны на персонал', !Тип данных, !Год, !Версия, !Подразделение, '{find_str}')"
    for value in replace_value:
        print(base_string.replace(find_value, value))


if __name__ == '__main__':
    arguments = sys.argv[1:]

    # парметр, определяющий шаблон
    if '-f' in arguments:
        f_ind = arguments.index('-f') + 1
        find_str = arguments[f_ind]
    else:
        find_str = '###'

    # параметр, определяющий список заначений,на которые заменится шаблон
    if '-r' in arguments:
        r_ind = arguments.index('-r') + 1
        rep_str = arguments[r_ind].split()
    else:
        rep_str = ['янв', 'фев', 'мар', 'апр', 'май', 'июн',
                   'июл', 'авг', 'сен', 'окт', 'ноя', 'дек']

    dub_months(find_str, rep_str)
